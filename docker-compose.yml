version: '3.3'
services: 
    netflowmeter:
        image: ryuk4/netflowmqtt-sensor:latest
        hostname: netflowmeter
        container_name: netflowmeter
        network_mode: host
        volumes: 
            - /etc/localtime:/etc/localtime
            - /etc/timezone:/etc/timezone
        env_file: 
            - ./envfile/netflowmeter.env
    
    # snort:
    #     image: mataelang/snorqttalpine-sensor
    #     hostname: snort
    #     container_name: snort
    #     network_mode: host
    #     volumes: 
    #         - /etc/localtime:/etc/localtime
    #         - /etc/timezone:/etc/timezone
    #     env_file: 
    #         - ./envfile/snort.env
            
    zookeeper:
        image: confluentinc/cp-zookeeper:6.2.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-server:6.2.0
        hostname: broker
        container_name: broker
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "9101:9101"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: 'true'
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    
    schema-registry:
        image: confluentinc/cp-schema-registry:6.2.0
        hostname: schema-registry
        container_name: schema-registry
        depends_on:
            - broker
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

    connect:
        build: 
            context: ./dockerfiles/cp-kafka-connect
            dockerfile: Dockerfile
        image: cp-kafka-connect:latest
        hostname: connect
        container_name: connect
        depends_on:
            - zookeeper
            - broker
            - schema-registry
        ports:
            - "8083:8083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
            CONNECT_REST_ADVERTISED_HOST_NAME: connect
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: compose-connect-group
            CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
            CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            # Json Converter
            CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            # Avro Converter
            # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
            # CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            # CLASSPATH required due to CC-2422
            CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.1.1.jar
            CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
            CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
        
    #Open Source Web-GUI (need to Improve from Developer)
    # control-center:
    #     image: provectuslabs/kafka-ui
    #     container_name: control-center
    #     depends_on:
    #         - broker
    #         - schema-registry
    #         - connect
    #     ports:
    #         - "9021:8080"
    #     environment:
    #         KAFKA_CLUSTERS_0_NAME: 'MataElangLab'
    #         KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:29092'
    #         KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
    #         KAFKA_CLUSTERS_0_SCHEMAREGISTRY: 'http://schema-registry:8081'
    #         KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: 'MataElangLabConnector'
    #         KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: 'connect:8083'

    control-center:
        image: confluentinc/cp-enterprise-control-center:6.2.0
        hostname: control-center
        container_name: control-center
        depends_on:
            - broker
            - schema-registry
            - connect
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
            CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
            CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021
    
    spark-base:
        build: 
            context: ./dockerfiles/spark-base
            dockerfile: Dockerfile
        image: spark-base:latest
        hostname: spark
        container_name: spark-base
        ports: 
            - "8888:8888"
        environment: 
            MONGO_URL: 'mongodb://mongodb:27017'
            BOOTSTRAP_SERVERS: 'broker:29092'
            SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

    mongodb:
        image: mongo:latest
        hostname: mongodb
        container_name: mongodb
        restart: on-failure
        ports: 
            - "8082:8081"
            - "27017:27017"
        environment: 
            MONGO_INITDB_DATABASE: 'mataelanglab'

    # mongoclient:
    #     image: mongoclient/mongoclient:latest
    #     hostname: mongo-client
    #     container_name: mongo-client
    #     ports:
    #       - "3000:3000"
    #     environment:
    #         STARTUP_DELAY: 30
    #         MONGOCLIENT_DEFAULT_CONNECTION_URL: 'mongodb://mongodb:27017'

    mongochart:
        image: quay.io/mongodb/charts:19.12.2
        hostname: mongo-charts
        container_name: mongo-charts
        ports:
            - 9080:80
            - 9443:443
        volumes:
            - ./volume/mongochart/keys:/mongodb-charts/volumes/keys
            - ./volume/mongochart/logs:/mongodb-charts/volumes/logs
            - ./volume/mongochart/db-certs:/mongodb-charts/volumes/db-certs
            - ./volume/mongochart/web-certs:/mongodb-charts/volumes/web-certs
        environment: 
            CHARTS_SUPPORT_WIDGET_AND_METRICS: "on"
            SSL_CERT_DIR: /mongodb-charts/volumes/db-certs
            CHARTS_MONGODB_URI: mongodb://mongodb:27017
